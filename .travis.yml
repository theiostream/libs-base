language: cpp
dist: trusty
compiler:
    - clang
    - gcc
env:
    - LIBRARY_COMBO=gnu-gnu-gnu
    - LIBRARY_COMBO=gnu-gnu-gnu LEGACY_GCC=1
    - LIBRARY_COMBO=ng-gnu-gnu
    - LIBRARY_COMBO=ng-gnu-gnu BASE_ABI=--disable-mixed-abi
matrix:
    exclude:
        - compiler: gcc
          env: LIBRARY_COMBO=ng-gnu-gnu
        - compiler: gcc
          env: LIBRARY_COMBO=ng-gnu-gnu BASE_ABI=--disable-mixed-abi
        - compiler: clang
          env: LIBRARY_COMBO=gnu-gnu-gnu
        - compiler: clang
          env: LIBRARY_COMBO=gnu-gnu-gnu LEGACY_GCC=1
sudo: required
before_install:
    - >
        if [ ! -z $LEGACY_GCC ];
        then
          sudo add-apt-repository "deb http://old-releases.ubuntu.com/ubuntu/ breezy main restricted universe multiverse" -y
          sudo add-apt-repository "deb http://old-releases.ubuntu.com/ubuntu/ breezy-updates main restricted universe multiverse" -y
          sudo add-apt-repository "deb http://old-releases.ubuntu.com/ubuntu/ breezy-security main restricted universe multiverse" -y

          sudo apt-get -qq update;
          sudo apt-get install -y --allow-unauthenticated gcc-3.4 gobjc-3.4;
          export CC=gcc-3.4;
        else
          sudo apt-get -qq update;
        fi;
    - sudo apt-get install -y cmake pkg-config libgnutls28-dev libgmp-dev libffi-dev libicu-dev libxml2-dev libxslt1-dev libssl-dev libavahi-client-dev zlib1g-dev
    - >
        if [ $LIBRARY_COMBO = 'gnu-gnu-gnu' ] && [ -z $LEGACY_GCC ];
        then
          if [ $CC = 'gcc' ];
          then
            sudo apt-get install -y gobjc;
          fi;
          sudo apt-get install -y libobjc-4.8-dev;
        else
          sudo apt-get install -y libkqueue-dev libpthread-workqueue-dev;
        fi;
install: ./travis-deps.sh
before_script: >
    export LIBRARY_PATH=$HOME/staging/lib:$LIBRARY_PATH;
    export LD_LIBRARY_PATH=$HOME/staging/lib:$LD_LIBRARY_PATH;
    if [ $LIBRARY_COMBO = 'ng-gnu-gnu' ];
    then
      export CPATH=$HOME/staging/include;
    else
      export CPATH=/usr/lib/gcc/x86_64-linux-gnu/4.8/include;
    fi;
    export PATH=$HOME/staging/bin:$PATH;
    export GNUSTEP_MAKEFILES=$HOME/staging/share/GNUstep/Makefiles;
    . $HOME/staging/share/GNUstep/Makefiles/GNUstep.sh;
script: >
    ./configure $BASE_ABI;
    make && make install && make check || (cat Tests/tests.log && false);
